#!/usr/bin/env ruby
require 'yaml'
require 'kukushka'
require 'pry'
require 'commander'
require 'redis'
require 'redis-namespace'
require 'json'

redis_connection = Redis.new
redis = Redis::Namespace.new(:kukushka, redis: redis_connection)

Commander.configure do
  program :name, 'kuku'
  program :version, '1.0.0'
  program :description, 'learn list'
  default_command :sample

  command :sample do |c|
    c.syntax = 'kuku sample'
    c.description = 'Show next sample'
    c.action do |args, options|
      unless redis.get('source')
        Kukushka.restore(redis)
      end

      next unless redis.get('enabled') == 'true'
      annoying = redis.get(:annoying).to_i
      if annoying > 0
        next if 1.0/annoying < rand
      end

      res = Kukushka.kuku(redis)
      puts res if res
    end
  end

  command :init do |c|
    c.syntax = 'kuku init'
    c.description = 'Default initiation'
    c.action do |args, options|
      # res = Kukushka.kuku(ARGV)
      # puts res if res
    end
  end

  command :annoying do |c|
    c.syntax = 'kuku annoying [int]'
    c.description = 'Sets annoying factor'
    c.action do |args, options|
      redis.set(:annoying, args.first)
      Kukushka.store(redis)
      # puts res if res
    end
  end

  command :format do |c|
    c.syntax = 'kuku format simple'
    c.description = 'Output format'
    c.action do |args, options|
      redis.set(:format, args.first)
      Kukushka.store(redis)
    end
  end

  command :source do |c|
    c.syntax = 'kuku source file_path'
    c.description = 'Add new source'
    c.action do |args, options|
      lines = File.readlines(args.first, chomp: true)
      redis.set(:source, args.first)
      redis.set(:lines, lines.to_json)
      Kukushka.store(redis)
    end
  end

  command :on do |c|
    c.syntax = 'kuku on'
    # c.description = 'enable'
    c.action do |args, options|
      redis.set('enabled', true)
    end
  end

  command :off do |c|
    c.syntax = 'kuku off'
    # c.description = 'disable'
    c.action do |args, options|
      redis.set('enabled', false)
    end
  end

  command :status do |c|
    c.syntax = 'kuku status'
    c.description = 'disable'
    c.action do |args, options|
      %i(source enabled annoying output counter from circle).each do |key|
        puts "#{key}: #{redis.get(key.to_s)}"
      end
    end
  end

  command :reset do |c|
    c.syntax = 'kuku reset'
    c.description = 'reset config'
    c.action do |args, options|
      Kukushka.reset(redis)
    end
  end
end
